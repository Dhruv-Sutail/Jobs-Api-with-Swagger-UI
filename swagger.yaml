openapi: 3.0.0
info:
  title: Jobs Api
  contact: {}
  version: "1.0"
servers:
  - url: http://localhost:5000/api/v1/
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: User Registeration
      operationId: UserRegisteration
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserRegisterationRequest"
                - example:
                    name: Dhruv Rajesh Sutail
                    email: dhruvsutail123@gmail.com
                    password: Secret
            example:
              name: Dhruv Rajesh Sutail
              email: dhruvsutail123@gmail.com
              password: Secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: User Login
      operationId: UserLogin
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserLoginRequest"
                - example:
                    email: dhruvsutail@gmail.com
                    password: Secret
            example:
              email: dhruvsutail@gmail.com
              password: Secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: netflix
                    position: backend developer
            example:
              company: netflix
              position: backend developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get all Jobs
      operationId: GetallJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The Job ID
    get:
      tags:
        - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Single Job
      operationId: UpdateSingleJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateSingleJobRequest"
                - example:
                    company: random
                    position: backend + frontend developer
            example:
              company: random
              position: backend + frontend developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    UserRegisterationRequest:
      title: UserRegisterationRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Dhruv Rajesh Sutail
        email: dhruvsutail123@gmail.com
        password: Secret
    UserLoginRequest:
      title: UserLoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: dhruvsutail@gmail.com
        password: Secret
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix
        position: backend developer
    UpdateSingleJobRequest:
      title: UpdateSingleJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: random
        position: backend + frontend developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
